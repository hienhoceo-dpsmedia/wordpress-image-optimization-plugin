# GitHub Release Workflow
# Automatically creates and publishes releases when version tags are pushed

name: Create Release Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

permissions:
  contents: write
  actions: read

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        npm install --only=dev
        
    - name: Create release packages
      run: |
        npm run create-package
        
    - name: Get version from tag or input
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        fi
        
    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: WordPress Image Optimization Plugin v${{ steps.get_version.outputs.version }}
        body: |
          ## üöÄ WordPress Image Optimization Plugin v${{ steps.get_version.outputs.version }}
          
          ### üåü Features
          - **Manual Image Optimization** - Full control without server overload
          - **WebP/AVIF Conversion** - Modern format support with fallback
          - **Vietnamese Language Priority** - Vietnamese-first interface
          - **Real-time Progress Tracking** - Live optimization monitoring
          - **LiteSpeed Cache Integration** - Optimized performance
          
          ### üì¶ Installation
          1. Download the WordPress.org package below
          2. Upload to WordPress Admin ‚Üí Plugins ‚Üí Add New ‚Üí Upload Plugin
          3. Activate and navigate to Image Optimization in admin menu
          
          ### üîß System Requirements
          - WordPress 5.0+
          - PHP 7.4+
          - Imagick or GD extension
          
          ### üìã Package Types
          - **WordPress.org Package**: Ready for WordPress.org submission
          - **GitHub Release Package**: Complete with documentation
          - **Development Package**: Full source code for developers
          
          ### ü§ù Support
          - **Documentation**: [Wiki](https://github.com/hienhoceo-dpsmedia/wordpress-image-optimization-plugin/wiki)
          - **Issues**: [GitHub Issues](https://github.com/hienhoceo-dpsmedia/wordpress-image-optimization-plugin/issues)
          - **Email**: hello@dps.media
          - **Website**: [dps.media](https://dps.media)
        draft: false
        prerelease: false
        files: |
          ./releases/wordpress-image-optimization-plugin-v${{ steps.get_version.outputs.version }}-wordpress-org.zip
          ./releases/wordpress-image-optimization-plugin-v${{ steps.get_version.outputs.version }}-github-release.zip
          ./releases/wordpress-image-optimization-plugin-v${{ steps.get_version.outputs.version }}-development.zip
          ./releases/package-info-v${{ steps.get_version.outputs.version }}.json
